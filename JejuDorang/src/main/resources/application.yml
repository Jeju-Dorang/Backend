spring:
  profiles:
    active: local
    group:
      local: local, common, secret
      blue: blue, common, secret
      green: green, common, secret

server:
  env: blue

---

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: http://localhost:5173/auth/kakao/callback

server:
  port: 8080
  serverAddress: localhost

serverName: local_server

---

spring:
  config:
    activate:
      on-profile: blue
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: http://3.36.151.149/auth/kakao/callback

server:
  port: 8080
  serverAddress: 3.36.151.149

serverName: blue_server

---

spring:
  config:
    activate:
      on-profile: green
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: http://3.36.151.149/auth/kakao/callback

server:
  port: 8081
  serverAddress: 3.36.151.149

serverName: green_server

---

# 공통부분
spring:
  config:
    activate:
      on-profile: common
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-secret: ${KAKAO_REST_API_KEY}
  jackson:
    serialization:
      fail-on-empty-beans: false
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        globally_quoted_identifiers: true
        show_sql: true
        format_sql: true
        generate_statistics: true
  mvc:
    static-path-pattern: /webapp/**
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  main:
    allow-bean-definition-overriding: true


logging.level:
  org.hibernate.SQL: debug
  org.springframework.web: debug

